var search_data = {"index":{"searchIndex":["array","codewars","codewarsmodel","datastore","decision","event","launcher","player","hash","launcherhelpers","object","string","decisions()","deep_symbolize_keys()","deep_symbolize_keys()","define_models_getters()","get_launcher_with_no_output()","launch()","load_attributes()","new()","new()","new()","next()","pluralize()","resolve_next_event()","start()","underscore()","update()","welcome()","gemfile","gemfile.lock","readme","logo"],"longSearchIndex":["array","codewars","codewars::codewarsmodel","codewars::datastore","codewars::decision","codewars::event","codewars::launcher","codewars::player","hash","launcherhelpers","object","string","codewars::event#decisions()","array#deep_symbolize_keys()","hash#deep_symbolize_keys()","codewars::datastore#define_models_getters()","launcherhelpers#get_launcher_with_no_output()","codewars::launcher#launch()","codewars::codewarsmodel#load_attributes()","codewars::codewarsmodel::new()","codewars::datastore::new()","codewars::launcher::new()","codewars::event#next()","string#pluralize()","codewars::launcher#resolve_next_event()","codewars::launcher#start()","string#underscore()","codewars::player#update()","codewars::launcher#welcome()","","","",""],"info":[["Array","","Array.html","",""],["CodeWars","","CodeWars.html","",""],["CodeWars::CodeWarsModel","","CodeWars/CodeWarsModel.html","","<p>Base CodeWarsModel class Can be used later on to add model global features …\n"],["CodeWars::DataStore","","CodeWars/DataStore.html","","<p>Main CodeWars Data Store Data is loaded in memory through data yml files in /data folder\n"],["CodeWars::Decision","","CodeWars/Decision.html","",""],["CodeWars::Event","","CodeWars/Event.html","",""],["CodeWars::Launcher","","CodeWars/Launcher.html","",""],["CodeWars::Player","","CodeWars/Player.html","","<p>This class represents the player\n"],["Hash","","Hash.html","",""],["LauncherHelpers","","LauncherHelpers.html","",""],["Object","","Object.html","",""],["String","","String.html","",""],["decisions","CodeWars::Event","CodeWars/Event.html#method-i-decisions","()","<p>Search for any decisions attached to the event @return [Decision]\n"],["deep_symbolize_keys","Array","Array.html#method-i-deep_symbolize_keys","()","<p>Missing helpfull rails #deep_symbolize_keys method in pure ruby Workaround using JSON lib found @ stackoverflow.com/questions/24927653/how-to-elegantly-symbolize-keys-for-a-nested-hash …\n"],["deep_symbolize_keys","Hash","Hash.html#method-i-deep_symbolize_keys","()","<p>Missing helpfull rails #deep_symbolize_keys method in pure ruby Workaround using JSON lib found @ stackoverflow.com/questions/24927653/how-to-elegantly-symbolize-keys-for-a-nested-hash …\n"],["define_models_getters","CodeWars::DataStore","CodeWars/DataStore.html#method-i-define_models_getters","()","<p>Sets up models getters dynamically (#events, #decisions)\n"],["get_launcher_with_no_output","LauncherHelpers","LauncherHelpers.html#method-i-get_launcher_with_no_output","()",""],["launch","CodeWars::Launcher","CodeWars/Launcher.html#method-i-launch","(event)","<p>Launches the given event the the screen @param Event event The event to be launched on screen @return …\n"],["load_attributes","CodeWars::CodeWarsModel","CodeWars/CodeWarsModel.html#method-i-load_attributes","(data={})","<p>Loads hash attributes to instance attributes @param Hash data to load\n"],["new","CodeWars::CodeWarsModel","CodeWars/CodeWarsModel.html#method-c-new","()",""],["new","CodeWars::DataStore","CodeWars/DataStore.html#method-c-new","()",""],["new","CodeWars::Launcher","CodeWars/Launcher.html#method-c-new","()","<p>Initilaze the app, gets the first event to pass it on and get the game on !\n"],["next","CodeWars::Event","CodeWars/Event.html#method-i-next","()",""],["pluralize","String","String.html#method-i-pluralize","()",""],["resolve_next_event","CodeWars::Launcher","CodeWars/Launcher.html#method-i-resolve_next_event","(current_event, player_input)","<p>This methods is in charge of resolving next event to display @param [Event] current_event The currently …\n"],["start","CodeWars::Launcher","CodeWars/Launcher.html#method-i-start","()","<p>Starts the game ! Shows the welcome section &amp; launches the first event\n"],["underscore","String","String.html#method-i-underscore","()",""],["update","CodeWars::Player","CodeWars/Player.html#method-i-update","(attributes)","<p>This methods sets attributes based on given hash attributes @param Hash attributes\n"],["welcome","CodeWars::Launcher","CodeWars/Launcher.html#method-i-welcome","()","<p>Shows the game logo &amp; welcome text\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; gem &#39;require_all&#39; gem &#39;awesome_print&#39; gem &#39;rubocop&#39;, …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  ast (2.4.0)\n  awesome_print (1.8.0)\n  diff-lcs (1.3)\n  jaro_winkler ...</pre>\n"],["README","","README_md.html","","<p>CodeWars\n<p>This a little role-player game around StarWars theme ! Some “easter eggs” have been …\n"],["logo","","app/assets/logo_txt.html","","<p>.           .        .                     .        .            .\n\n<pre>.               .    .          .  ...</pre>\n"]]}}